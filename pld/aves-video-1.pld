Name     Aves_Memory_Decoder;
PartNo   ATF22V10C;
Date     2025;
Revision 1.0;
Designer Malcolm North;
Company  None;
Assembly Aves Computer;
Location None;
Device   g22v10;

/*********************************************************************
 * Aves Video Timing Controller
 * 
 * This PLD provides timing logic for a 6845 CRTC based video system:
 * 
 * Basic Model (40 Column):
 * - 40 x 25 character text display (320 x 300 pixels)
 * - 2K x 8 dual port RAM screen buffer
 *   * 1K for character codes
 *   * 1K for color attributes (4-bit FG, 4-bit BG)
 * - Fixed 2MHz character clock timing
 *
 * Advanced Model (80 Column):
 * - Switchable 40/80 x 25 character display
 * - 4K x 8 dual port RAM screen buffer
 *   * 2K for character codes
 *   * 2K for color attributes (4-bit FG, 4-bit BG)
 * - Switchable 2MHz/4MHz timing
 *
 * Common Specifications:
 * - 8 x 12 pixel character cell font
 * - 16 color output capability
 * - 65C02 CPU interface
 * - Video cursor generation through signal inversion
 *
 * Video Output Specifications:
 * - SVGA compatible timing
 * - Dot clock: 32 MHz (31.25nS period)
 * - Horizontal: 40/80 characters (320/640 pixels)
 * - Vertical: 25 characters (300 pixels)
 * - Character cell: 8 x 12 pixels
 * - Active display area: 
 *   * 40 column: 320 x 300 pixels
 *   * 80 column: 640 x 300 pixels
 * - Horizontal sync: SVGA compatible
 * - Vertical sync: SVGA compatible
 *
 * ATF22V10C Pinout:
 *                 ___________
 *           chck | 1       24| VCC
 *           phi2 | 2       23| dvs
 *           clk8 | 3       22| dde
 *             hs | 4       21| ldcolb
 *             vs | 5       20| vidout
 *           crsr | 6       19| loe2b
 *             de | 7       18| dispb
 *          vidin | 8       17| loe1b
 *             nc | 9       16| ldchb
 *             nc |10       15  dcrsr
 *             nc |11       14| dhs
 *            GND |12       13| nc
 *                |___________|
 *
 * Clock8    =  8MHz clock from divider
 * Phi2      =  4MHz CPU clock is 4MHz from divider
 * Chck      =  2MHz Chracter clock
 * Ldchb     = Pulse to load character into character latch
 * loe1b     = Output enable for first latch (active low, 80 column mode)
 * loe2b     = Output enable for second latch (active low, 80 column mode)
 * ldcolb    = Loads colour latch
 *
 * Video Cursor Generation:
 *   vidin is the raw video input signal
 *   dcrsr is the registered cursor signal
 *   vidout is XORed with cursor to create inversion effect
 *
  *****************************************************************/

/* *************** INPUT PINS *********************/
PIN 1  = chck;      /* Counter (74HC163) output QA - character clock */
$define clock /chck /* use character clock falling edge */

PIN 2  = phi2;      /* Counter (74HC163) output QB - system clock phase 2 */
PIN 3  = clk8;      /* Counter (74HC163) output QC */
PIN 4  = hs;        /* 6845 CRTC horizontal sync output */
PIN 5  = vs;        /* 6845 CRTC vertical sync output */
PIN 6  = crsr;      /* 6845 CRTC cursor output */
PIN 7  = de;        /* 6845 CRTC display enable output */
pin 8  = vidin;     /* Video data input */
pin 9  = mode;      /* 0 = 40 Column, 1 = 80 column */

/* *************** OUTPUT PINS ********************/
pin 14 = dhs;       /* Registered horizontal sync output */
PIN 15 = dcrsr;     /* Registered cursor output */
PIN 16 = ldchb;     /* Load character register */
pin 17 = loe1b;     /* Cursor-modified video output */
pin 18 = dispb;     /* Display Buffer select */
PIN 19 = loe2b;     /* Select second latch when chck high */
PIN 20 = vidout;    /* Select first latch when chck low */
PIN 21 = ldcolb;    /* Inverted system clock phase 2 */
PIN 22 = dde;       /* Registered display enable output */
pin 23 = dvs;       /* Registered vertical sync output */

/* Synchronize 6845 CRTC outputs with character clock falling edge */
dhs.d = hs;
dvs.d = vs;
dcrsr.d = crsr;
dde.d = de;
/* 0123456701234567
-------------------------------
 * 0101010101010101    <- clk8
 * 0110011001100110    <- phi2
 * 0111100001111000    <- chck
 * 0000000011111111    <- mode
 *
 * 1011111110101111    <- ldb
 * 1110111101011111    <- ldcolb
 *
 */
/* Character loads during first half of phi2 */
ldchb = !( mode &  clk8 & !phi2 & chck)     /* 80 col char (slot 1) */
      # !(!mode & !clk8 & !phi2 & chck);    /* 40 col char (slot 0) */

/* Color loads during second half of phi2 */
ldcolb = !( mode &  clk8 &  phi2 & chck)    /* 80 col color (slot 3) */
       # !(!mode & !clk8 &  phi2 & chck);   /* 40 col color (slot 2) */

/* Latch output enables for 80-column mode */
loe1b = !(mode & !chck);    /* First latch when chck low */
loe2b = !(mode & chck);     /* Second latch when chck high */

/* Display buffer select for CRTC reading into latches */
dispb = !chck

/* Test vectors for Aves Video Timing Controller */
/* Format: [chck,phi2,clk8,hs,vs,crsr,de,vidin,mode] -> [dhs,dvs,dcrsr,dde,ldchb,ldcolb,loe1b,loe2b,dispb] */

/* Test 1: Reset/idle state - all inputs low (40 column mode) */
[0,0,0,0,0,0,0,0,0] -> [0,0,0,0,1,1,1,1,1];

/* Test 2: 40 column mode character timing */
[0,0,0,0,0,0,0,0,0] -> [0,0,0,0,1,1,1,1,1];  /* chck low - inactive */
[1,0,0,0,0,0,0,0,0] -> [0,0,0,0,0,1,1,1,0];  /* chck high, phi2 low - load char */
[1,1,0,0,0,0,0,0,0] -> [0,0,0,0,1,0,1,1,0];  /* chck high, phi2 high - load color */

/* Test 3: 80 column mode timing */
[0,0,0,0,0,0,0,0,1] -> [0,0,0,0,1,1,0,1,1];  /* chck low - loe1b active */
[1,0,1,0,0,0,0,0,1] -> [0,0,0,0,0,1,1,0,0];  /* chck high, phi2 low, clk8 high - load char */
[1,1,1,0,0,0,0,0,1] -> [0,0,0,0,1,0,1,0,0];  /* chck high, phi2 high, clk8 high - load color */

/* Test 4: Sync and cursor registration */
[1,0,0,1,1,1,1,0,0] -> [1,1,1,1,1,1,1,1,0];  /* Register sync signals */

/* Test 5: Video cursor XOR operation */
[0,0,0,0,0,0,0,1,0] -> [0,0,0,0,1,1,1,1,1];  /* vidin=1, cursor=0 -> vidout=1 */
[1,0,0,0,0,1,0,1,0] -> [0,0,1,0,1,1,1,1,0];  /* vidin=1, cursor=1 -> vidout=0 */

/* Test 6: 40/80 column mode switching */
[0,0,0,0,0,0,0,0,0] -> [0,0,0,0,1,1,1,1,1];  /* 40 column mode */
[0,0,0,0,0,0,0,0,1] -> [0,0,0,0,1,1,0,1,1];  /* 80 column mode */
