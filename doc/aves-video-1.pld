Name     Aves_Memory_Decoder;
PartNo   ATF22V10C;
Date     2025;
Revision 1.0;
Designer Malcolm North;
Company  None;
Assembly Aves Computer;
Location None;
Device   g22v10;

/*********************************************************************
 * Aves Video Timing Controller
 * 
 * This PLD provides timing logic for a 6845 CRTC based video system:
 * - 40 x 25 character text display (320 x 300 pixels)
 * - 8 x 12 pixel character cell font
 * - 16 color output capability
 * - 2K x 8 dual port RAM screen buffer
 * - 65C02 CPU interface
 * - 4 external interrupt inputs with hardware combining
 *
 * Video Output Specifications:
 * - Based on SVGA timing standards at reduced clock rate
 * - Dot clock: 16 MHz
 * - Horizontal: 40 characters (320 pixels)
 * - Vertical: 25 characters (300 pixels)
 *
 * The device synchronizes 6845 CRTC outputs with the system clocks,
 * generates required timing signals for the dual port RAM access,
 * provides clock management for the video subsystem, and combines
 * multiple interrupt sources into a single CPU interrupt.
 *
 * ATF22V10C Pinout:
 *                    ___________
 *           chck  1 |           | 24  VCC
 *           phi2  2 |           | 23  dvs
 *           clk8  3 |           | 22  dde
 *             hs  4 |           | 21  phi2b
 *             vs  5 |           | 20  dotclkb
 *           crsr  6 |           | 19  GND
 *             de  7 |           | 18  irqb
 *         dotclk  8 |           | 17  ldb
 *          irq1b  9 |           | 16  chckb
 *          irq2b 10 |           | 15  dcrsr
 *          irq3b 11 |           | 14  dhs
 *          irq4b 12 |           | 13  GND
 *                   |___________|
 *
 * Interrupt Handling:
 * - Four active-low interrupt inputs (irq1b - irq4b)
 * - Combined into single active-low interrupt output (irqb)
 * - Any input going low will drive output low
 * - All inputs must be high for output to be high
 * - CPU can check individual status to determine source
 *
 * Designer: Malcolm North
 * Date: 2025
 * Rev: 1.0
 *********************************************************************/

/* *************** INPUT PINS *********************/
PIN 1  = chck;      /* Counter (74HC163) output QA - character clock */
$define clock /chck /* use character clock falling edge */

PIN 2  = phi2;      /* Counter (74HC163) output QB - system clock phase 2 */
PIN 3  = clk8;      /* Counter (74HC163) output QC */
PIN 4  = hs;        /* 6845 CRTC horizontal sync output */
PIN 5  = vs;        /* 6845 CRTC vertical sync output */
PIN 6  = crsr;      /* 6845 CRTC cursor output */
PIN 7  = de;        /* 6845 CRTC display enable output */
pin 8  = dotclk;    /* Crystal oscillator output - video dot clock */
pin 9  = irq1b      /* */
pin 10 = irq2b      /* */
pin 11 = irq3b      /* */
pin 12 = irq4b

/* *************** OUTPUT PINS ********************/
pin 14 = dhs;       /* Registered horizontal sync output */
pin 23 = dvs;       /* Registered vertical sync output */
PIN 15 = dcrsr;     /* Registered cursor output */
PIN 22 = dde;       /* Registered display enable output */
PIN 16 = chckb;     /* Inverted character clock */
PIN 21 = phi2b;     /* Inverted system clock phase 2 */
pin 17 = ldb;       /* Shift register load signal (active low) */
pin 20 = dotclkb;   /* Inverted dot clock */
pin 18 = irqb       /* */

/* Synchronize 6845 CRTC outputs with character clock falling edge */
dhs.d = hs;
dvs.d = vs;
dcrsr.d = crsr;
dde.d = de;

/* Generate inverted clock signals */
chckb = !chck;
phi2b = !phi2;

/* Generate counter load pulse when QA (chck), QB (phi2), and QC (clk8) are all low */
ldb = !(!chck & !clk8 & !phi2);

/* Generate inverted dot clock */
dotclkb = dotclk;

/* Combine all interrupt inputs - any low input generates low output */
irqb = !irq1b & !irq2b & !irq3b & !irq4b;
