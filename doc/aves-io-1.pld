/* Equations for Aves Sparrow and Robin

Decoding for Memory Map as follows:

1. ie0, io2-io4 all zero
    0x8000-oxffff all
*/

/* input pins */
pin 1 = 
pin 2 = 
pin 3 = 
pin 4 = a8
pin 5 = a9
pin 6 = a10
pin 7 = a11
pin 8 = a12
pin 9 = a13
pin 10 = a14
pin 11 = a15
pin 13 = io
pin 23 = 
pin 14 = 
pin 22 = 
pin 15 = ie0
pin 21 = vacc                   /* needed on Robin to provide VIC access, pull high on Sparrow */
/* output pins */
pin 16 = mcr istype 'com'    
pin 20 =  istype 'com'
pin 17 = ram_1 is_type 'com'    /* needed on Robin to restrict access to upper memory for vic */
pin 19 = ram_2 istype 'com'
pin 18 = ma15 istype 'com'

/* 0xFF00 to 0xFFFF always rom */
rom_hole = a15 & a14 & a13 & a12 & a11 & a10 & a9 & a8

/* 0xFE00 to 0xFEFF always I/O */
io_hole_1 = a15 & a14 & a13 & a12 & a11 & a10 & a9 & !a8

/* 0xFD00 to 0xFDFF when io2 = 1 */
io_hole_2 = io2 & a15 & a14 & a13 & a12 & a11 & a10 & !a9 & a8

/* 0xFC00 to 0xFCFF always io3 = 1 */
io_hole_3 = io3 & a15 & a14 & a13 & a12 & a11 & a10 & !a9 & !a8

/* 0xE000 to 0xEFFF always io4 = 1 */
io_hole_4 = io4 & a15 & a14 & a13 & !a12

/* Main memory from 0x0 to 0x7fff */
/* !ram_1   = !a15 unneseccary use of PLD term when using 32 RAMs */

/* ROM for 0x8000 to 0xffff 
    Permenant rom at 0xFF00 to 0xffff
    Permenant i/o at 0xFE00 to 0xFEFF
    Selectable i/o at 0xFD00 to 0xFDFF
    Selectable i/o at 0xFC00 to 0xFCFF
    Selectable i/o at 0xE000 to 0xEFFF
*/
!rom    = !bank_en & a15 & r_w & !(io_hole_1 + io_hole_2 + io_hole_3 + io_hole_4 + vacc ) \
        + rom_hole
/* Main memory from 0x0000 to 0xffff
*/
!ram_1  = !a15 & !vacc

/* Banked memory from 0x8000 to 0xfdff
*/
!ram_2  = bank_en & a15 + !(io_hole_1 + io_hole_2 + io_hole_3 + io_hole_4) \
        + !bank_en & a15 & !r_w \
        + !rom_hole \
        + !vacc

/* MA15 sets address bit 15 of a 64K+ memory device 
    Must high when addressing top 32k of memory
    ram banking is disabled
    is not a peek though hole
*/
ma15    = !bank_en & a15 & ie0 + !(rom_hole + io_hole_1 + io_hole_2 + io_hole_3 + io_hole_4)

/* Write enable, occurs in second half of phi2 only
    and is disabled during video access.
*/
!wr = phi2 & !r_w & !vacc

/* Add test vectors for ram_1 and wr */
test_vectors([
    phi2, r_w, bank_en,
    a15,a14,a13,a12,a11,a10,a9,a8,
    io2,io3,io4,ie0,vacc,
    rom,ram_1,ram_2,ma15,wr])

/* Test ram_1 (lower 32K) and write enable */
[  0,  1,  x,     0,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  0,   1,  0,  1,  0,  1]; /* Lower RAM, read, phi2=0 */
[  1,  1,  x,     0,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  0,   1,  0,  1,  0,  1]; /* Lower RAM, read, phi2=1 */
[  0,  0,  x,     0,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  0,   1,  0,  1,  0,  1]; /* Lower RAM, write, phi2=0 */
[  1,  0,  x,     0,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  0,   1,  0,  1,  0,  0]; /* Lower RAM, write, phi2=1 */
[  x,  x,  x,     0,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  1,   1,  1,  1,  0,  1]; /* Lower RAM, video access */
[  x,  x,  0,     1,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  0,   x,  1,  x,  x,  x]; /* Upper addr, no video access */
[  x,  x,  0,     1,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  1,   x,  0,  x,  x,  x]; /* Upper addr, no video access */
[  x,  x,  x,     1,  x,  x,  x,  x,  x, x, x,   x,  x,  x,  x,  1,   x,  1,  x,  x,  1]; /* Upper addr, video access */

/* Test ROM access with video cycles */
[  1,  1,  0,     1,  0,  0,  0,  x,  x, x, x,   0,  0,  0,  x,  0,   0,  1,  1,  x,  1]; /* ROM read, no video access */
[  1,  1,  0,     1,  0,  0,  0,  x,  x, x, x,   0,  0,  0,  x,  1,   1,  1,  1,  x,  1]; /* ROM read, with video access */
[  1,  1,  0,     1,  1,  1,  1,  1,  1, 1, 1,   0,  0,  0,  x,  1,   0,  1,  1,  x,  1]; /* ROM hole (0xFF00), video access */


