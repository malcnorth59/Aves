/* Equations for Aves Sparrow and Robin
 *
 * Memory Map:
 * 0x0000-0x7FFF: Main RAM
 * 0x8000-0x8FFF: DPM when enabled
 * 0x8000-0xFBFF: Banked RAM/ROM
 * 0xFC00-0xFDFF: I/O (when io=1)
 * 0xFE00-0xFEFF: I/O (always)
 * 0xFF00-0xFFFF: ROM (always)
 *
 * Control Signals:
 *    bank_en:  Enables RAM banking in upper memory
 *    vacc:     Video access control
 *    ie0:      Selects second 32K page of ROM
 *    dpm:      Dual port memory control
 *    r_w:      Read/Write control (low for write)
 *    phi2:     System clock phase 2
 */

/* Input pins */
pin 1 = bank_en      /* Bank enable for upper memory */
pin 2 = phi2         /* System clock phase 2 */
pin 3 = r_w          /* Read/Write control */
pin 4 = a8           /* Address lines 8-15 */
pin 5 = a9
pin 6 = a10
pin 7 = a11
pin 8 = a12
pin 9 = a13
pin 10 = a14
pin 11 = a15
pin 13 = io          /* I/O select */
pin 23 = vacc        /* Video access control for VIC/TED/VIC-II */
pin 14 = ie0         /* ROM page select for 64K EPROM */

/* Output Pins */
pin 22 = wr istype 'com'        /* Write enable for static RAM */
pin 15 = rom istype 'com'       /* ROM chip select */
pin 21 = ram_1 istype 'com'     /* Lower 32K RAM chip select */
pin 16 = ram_2 istype 'com'     /* Upper 32K RAM chip select */
pin 20 = ma15 istype 'com'      /* Memory address bit 15 for ROM banking */
pin 17 = dpm istype 'com'       /* Dual Port Memory chip select */
pin 19 = nc1
pin 18 = nc2

/* Memory region definitions */
rom_hole  = a15 & a14 & a13 & a12 & a11 & a10 & a9 & a8    /* 0xFF00-0xFFFF */
io_hole_1 = a15 & a14 & a13 & a12 & a11 & a10 & a9 & !a8   /* 0xFE00-0xFEFF */
io_hole_2 = io & a15 & a14 & a13 & a12 & a11 & a10 & !a9   /* 0xFC00-0xFDFF */
dpm_hole  = dpm & a15 & !a14 & !a13 & !a12                 /* 0x8000-0x8FFF */

/* ROM select logic
 * Active for:
 *   Upper memory reads ROM when bank_en is low
 *   Always active in ROM hole
 *   Disabled during I/O, DPM, Upper RAM and video access
 */
!rom    = !bank_en & a15 & r_w & !vacc & !(io_hole_1 + io_hole_2 + dpm_hole) \
        + rom_hole

/* Lower RAM select (0x0000-0x7FFF)
 * Active for all lower memory access except during video access
 */
!ram_1  = !a15 & !vacc

/* Upper RAM select (0x8000-0xFFFF)
 * Active for:
 *   Banked RAM access
 *   Write-through when ROM is selected
 *   All areas except I/O, DPM and ROM holes
 *   Used for VIC video buffers
 */
!ram    = !vacc &  bank_en & !(io_hole_1 + io_hole_2 + dpm_hole) \
        + !vacc & !bank_en & a15 & !r_w \
        + !vacc & !rom_hole \
        +  vacc 

/* Memory address bit 15 control
 * Active when:
 *   Accessing second ROM bank
 *   Not accessing I/O or ROM holes
 */
ma15    = !bank_en & a15 & ie0 & !(rom_hole + io_hole_1 + io_hole_2 + dpm_hole)

/* Write enable control
 *    Active during phi2 high and r_w low
 *    Disabled during video access
 */
!wr = phi2 & !r_w & !vacc

/* DPM chip select */
!dpm = phi2 & dpm_hole

/* Test vectors verify:
 *    Lower RAM access (0x0000-0x7FFF)
 *    Upper ROM access (0xFF00-0xFFFF)
 *    I/O space access
 *    Bank switching
 *    ROM write-through
 *    Video access blocking
 */
test_vectors (
    bank_en, phi2, r_w, 
    a15,a14,a13,a12,a11,a10,a9,a8, 
    io, vacc, ie0, dpm, 
    wr,rom,ram_1,ram_2,ma15

/* Test 1: Lower RAM read/write (0x0000-0x7FFF) */
[0, 1, 1, 0,0,0,0,0,0,0,0, 0, 0, 0, 0, 1,1,0,1,0] /* Read from 0x0000 */
[0, 1, 0, 0,0,0,0,0,0,0,0, 0, 0, 0, 0, 0,1,0,1,0] /* Write to 0x0000 */

/* Test 2: Upper ROM read (0xFF00-0xFFFF) */
[0, 1, 1, 1,1,1,1,1,1,1,1, 0, 0, 0, 0, 1,0,1,1,0] % Read from 0xFFFF
[0, 1, 0, 1,1,1,1,1,1,1,1, 0, 0, 0, 0, 0,0,1,1,0] % Write to 0xFFFF (ROM write-through)

/* Test 3: I/O access (0xFE00-0xFEFF) */
[0, 1, 1, 1,1,1,1,1,1,1,0, 0, 0, 0, 0, 1,1,1,0,0] /* Read from 0xFE00 */
[0, 1, 0, 1,1,1,1,1,1,1,0, 0, 0, 0, 0, 0,1,1,0,0] /* Write to 0xFE00 */

/* Test 4: Bank switching (0x8000-0xFBFF) */
[1, 1, 1, 1,0,0,0,0,0,0,0, 0, 0, 0, 0, 1,1,1,0,1] /* Read with banking enabled */
[0, 1, 1, 1,0,0,0,0,0,0,0, 0, 0, 0, 0, 1,0,1,1,0] /* Read with banking disabled */

/* Test 5: ROM banking (IE0) */
[0, 1, 1, 1,0,0,0,0,0,0,0, 0, 0, 1, 0, 1,0,1,1,1] /* Read from second ROM bank */

/* Test 6: DPM access */
[0, 1, 1, 1,0,0,0,0,0,0,0, 0, 0, 0, 1, 1,1,1,0,0] /* Read from DPM area */

/* Test 7: Video access blocking */
[0, 1, 1, 0,0,0,0,0,0,0,0, 0, 1, 0, 0, 1,1,1,1,0] /* Lower RAM with video access */

[0, 1, 0, 0,0,0,0,0,0,0,0, 0, 1, 0, 0, 1,1,1,1,0] /* Write blocked during video access */

/* Test 8: Additional I/O space (0xFC00-0xFDFF) */
[0, 1, 1, 1,1,1,1,0,0,0,0, 1, 0, 0, 0, 1,1,1,0,0] /* Read from 0xFC00 with io=1 */

/* Test 9: DPM write-through */
[0, 1, 0, 1,0,0,0,0,0,0,0, 0, 0, 0, 1, 0,1,1,0,0] /* Write to DPM area */

/* Test 10: Bank switching write */
[1, 1, 0, 1,0,0,0,0,0,0,0, 0, 0, 0, 0, 0,1,1,0,1] /* Write with banking enabled */

/* Test 11: Memory boundary test */
[0, 1, 1, 1,0,0,0,0,0,0,0, 0, 0, 0, 0, 1,0,1,1,0] /* Read at 0x8000 boundary */

)